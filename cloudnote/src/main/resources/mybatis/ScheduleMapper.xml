<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.ScheduleMapper">

    <sql id="base_sql">
        schedule_id,account_id,schedule_content,execute_time,ahead_time,create_time,update_time,is_need_remind,schedule_title,remind_time
    </sql>

    <resultMap id="baseMap" type="com.entity.Schedule">
        <id column="schedule_id" property="scheduleId" jdbcType="INTEGER"/>
        <result column="account_id" property="accountId" jdbcType="INTEGER"/>
        <result column="schedule_content" property="scheduleContent" jdbcType="VARCHAR"/>
        <result column="execute_time" property="executeTime" jdbcType="VARCHAR"/>
        <result column="remind_time" property="remindTime" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
        <result column="schedule_title" property="scheduleTitle" jdbcType="VARCHAR"/>
        <result column="is_need_remind" property="isNeedRemind" jdbcType="VARCHAR"/>
        <result column="ahead_time" property="aheadTime" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="selectScheduleByCondition" parameterType="com.entity.Condition" resultType="com.entity.Schedule"
            resultMap="baseMap">
        select
        <include refid="base_sql"/>
        from schedule
        where account_id = #{accountId,jdbcType=INTEGER}
        <if test="executeTime != null and executeTime != ''">
            and execute_time like #{executeTime} '%'
        </if>

    </select>

    <insert id="insertSchedule" parameterType="com.entity.Schedule" useGeneratedKeys="true" keyProperty="scheduleId">
        insert into schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountId != null">
                account_id,
            </if>
            <if test="scheduleContent != null">
                schedule_content,
            </if>
            <if test="executeTime != null">
                execute_time,
            </if>
            <if test="remindTime != null">
                remind_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isNeedRemind != null">
                is_need_remind,
            </if>
            <if test="aheadTime != null">
                ahead_time,
            </if>
            <if test="scheduleTitle != null">
                schedule_title,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountId != null">
                #{accountId,jdbcType=INTEGER},
            </if>
            <if test="scheduleContent != null">
                #{scheduleContent,jdbcType=VARCHAR},
            </if>
            <if test="executeTime != null">
                #{executeTime,jdbcType=VARCHAR},
            </if>
            <if test="remindTime != null">
                #{remindTime,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=VARCHAR},
            </if>
            <if test="isNeedRemind != null">
                #{isNeedRemind,jdbcType=VARCHAR},
            </if>
            <if test="aheadTime != null">
                #{aheadTime,jdbcType=VARCHAR},
            </if>
            <if test="scheduleTitle != null">
                #{scheduleTitle,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

  <!--  <select id="selectScheduleByCondition" parameterType="com.entity.Condition" resultType="com.entity.Schedule"
            resultMap="baseMap">
        select execute_time,schedule_content
        from schedule
        where user_id = #{userId,jdbcType=INTEGER} and show_execute_time = #{showExecuteTime,jdbcType=VARCHAR}
    </select>


    <select id="selectContentByCondition" parameterType="com.entity.Condition" resultType="com.entity.Schedule"
            resultMap="baseMap">
        select schedule_id,schedule_content
        from schedule
        where user_id = #{userId,jdbcType=INTEGER} and execute_time = #{executeTime,jdbcType=VARCHAR}
    </select>-->

  <!--  <select id="selectAdvanceByCondition" parameterType="com.entity.Condition" resultType="com.entity.Schedule"
            resultMap="baseMap">
        select schedule_id,schedule_content,advance_hour,advance_minute
        from schedule
        where user_id = #{userId,jdbcType=INTEGER} and execute_time = #{executeTime,jdbcType=VARCHAR}
    </select>-->
<!--
    <delete id="removeScheduleByCondition" parameterType="com.entity.Condition">
        delete from schedule
        where user_id = #{userId,jdbcType=INTEGER} and execute_time = #{executeTime,jdbcType=VARCHAR}
    </delete>-->


   <!-- <update id="updateSchedule" parameterType="com.entity.Schedule">
        update schedule
        set
            schedule_content= #{scheduleContent,jdbcType=VARCHAR},
            update_time = now(),
            remind_time = #{remindTime,jdbcType=VARCHAR},
            advance_hour = #{advanceHour,jdbcType=INTEGER},
            advance_minute = #{advanceMinute,jdbcType=INTEGER}
        where execute_time = #{executeTime,jdbcType=VARCHAR} and user_id = #{userId,jdbcType = INTEGER}
    </update>-->
    <!--
    #{executeTime,jdbcType=VARCHAR}
    set  -->

    <!--   &lt;!&ndash;设置笔记进入回收站&ndash;&gt;
       <update id="updateRecycle" parameterType="java.lang.Integer">
           update note
           set is_recycle = 1
           where note_id = #{noteId,jdbcType=INTEGER}
       </update>-->


    <!--    <select id="selectNoteByCondition" parameterType="com.entity.Condition" resultType="java.util.List">
            select
        </select>-->
</mapper>
